{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\GNIT\\\\Eighth Semester\\\\Capgemini\\\\BU\\\\Code - Copy\\\\src\\\\components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Pagination.css\";\n\nconst Pagination = ({}) => {\n  _s();\n\n  const [train, setTrains] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(3);\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentPosts = train.slice(firstPostIndex, lastPostIndex);\n  train = {\n    currentPosts\n  };\n  const totalPosts = {\n    train,\n    length\n  }; //   postsPerPage={postsPerPage}\n  //   setCurrentPage={setCurrentPage}\n  //   currentPage={currentPage}\n\n  let pages = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: pages.map((page, index) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(page),\n        className: page == currentPage ? \"active\" : \"\",\n        children: page\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"3+kI4o4GJOO1wL0xIywOYYNjlBQ=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/GNIT/Eighth Semester/Capgemini/BU/Code - Copy/src/components/Pagination.js"],"names":["React","Pagination","train","setTrains","useState","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","lastPostIndex","firstPostIndex","currentPosts","slice","totalPosts","length","pages","i","Math","ceil","push","map","page","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC,EAAD,KAGb;AAAA;;AACD,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBC,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCF,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMK,aAAa,GAAGJ,WAAW,GAAGE,YAApC;AACA,QAAMG,cAAc,GAAGD,aAAa,GAAGF,YAAvC;AACA,QAAMI,YAAY,GAAGT,KAAK,CAACU,KAAN,CAAYF,cAAZ,EAA4BD,aAA5B,CAArB;AACAP,EAAAA,KAAK,GAAG;AAAES,IAAAA;AAAF,GAAR;AACA,QAAME,UAAU,GAAC;AAACX,IAAAA,KAAD;AAAOY,IAAAA;AAAP,GAAjB,CARC,CASE;AACA;AACA;;AACN,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUL,UAAU,GAAGN,YAAvB,CAArB,EAA2DS,CAAC,EAA5D,EAAgE;AAC9DD,IAAAA,KAAK,CAACI,IAAN,CAAWH,CAAX;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cACGD,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,0BACE;AAEE,QAAA,OAAO,EAAE,MAAMhB,cAAc,CAACe,IAAD,CAF/B;AAGE,QAAA,SAAS,EAAEA,IAAI,IAAIhB,WAAR,GAAsB,QAAtB,GAAiC,EAH9C;AAAA,kBAKGgB;AALH,SACOC,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApCD;;GAAMrB,U;;KAAAA,U;AAsCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = ({\r\n    \r\n \r\n}) => {\r\n     const [train, setTrains] = useState([]);\r\n     const [currentPage, setCurrentPage] = useState(1);\r\n     const [postsPerPage, setPostsPerPage] = useState(3);\r\n     const lastPostIndex = currentPage * postsPerPage;\r\n     const firstPostIndex = lastPostIndex - postsPerPage;\r\n     const currentPosts = train.slice(firstPostIndex, lastPostIndex);\r\n     train = { currentPosts };\r\n     const totalPosts={train,length}\r\n        //   postsPerPage={postsPerPage}\r\n        //   setCurrentPage={setCurrentPage}\r\n        //   currentPage={currentPage}\r\n  let pages = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      {pages.map((page, index) => {\r\n        return (\r\n          <button\r\n            key={index}\r\n            onClick={() => setCurrentPage(page)}\r\n            className={page == currentPage ? \"active\" : \"\"}\r\n          >\r\n            {page}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}
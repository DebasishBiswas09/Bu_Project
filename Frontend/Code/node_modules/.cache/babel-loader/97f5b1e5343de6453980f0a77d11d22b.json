{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\GNIT\\\\Eighth Semester\\\\Capgemini\\\\BU\\\\Code\\\\src\\\\components1\\\\Pagination1.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { usePagination, DOTS } from \"usePagination\"; //import \"./pagination.scss\";\n\nconst Pagination1 = props => {\n  _s();\n\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 1,\n    currentPage,\n    pageSize,\n    className\n  } = props;\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize\n  }); // If there are less than 2 times in pagination range we shall not render the component\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length - 1];\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classnames(\"pagination-container\", {\n      [className]: className\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: classnames(\"pagination-item\", {\n        disabled: currentPage === 1\n      }),\n      onClick: onPrevious,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), paginationRange.map(pageNumber => {\n      // If the pageItem is a DOT, render the DOTS unicode character\n      if (pageNumber === DOTS) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"pagination-item dots\",\n          children: \"\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }, this);\n      } // Render our Page Pills\n\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classnames(\"pagination-item\", {\n          selected: pageNumber === currentPage\n        }),\n        onClick: () => onPageChange(pageNumber),\n        children: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classnames(\"pagination-item\", {\n        disabled: currentPage === lastPage\n      }),\n      onClick: onNext,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination1, \"19HqfiXoIUMweeBbakf/FHNBwW4=\", false, function () {\n  return [usePagination];\n});\n\n_c = Pagination1;\nexport default Pagination1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination1\");","map":{"version":3,"sources":["D:/GNIT/Eighth Semester/Capgemini/BU/Code/src/components1/Pagination1.js"],"names":["React","classnames","usePagination","DOTS","Pagination1","props","onPageChange","totalCount","siblingCount","currentPage","pageSize","className","paginationRange","length","onNext","onPrevious","lastPage","disabled","map","pageNumber","selected"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,eAApC,C,CACA;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,YAAY,GAAG,CAHX;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA;AANI,MAOFN,KAPJ;AASA,QAAMO,eAAe,GAAGV,aAAa,CAAC;AACpCO,IAAAA,WADoC;AAEpCF,IAAAA,UAFoC;AAGpCC,IAAAA,YAHoC;AAIpCE,IAAAA;AAJoC,GAAD,CAArC,CAV6B,CAiB7B;;AACA,MAAID,WAAW,KAAK,CAAhB,IAAqBG,eAAe,CAACC,MAAhB,GAAyB,CAAlD,EAAqD;AACnD,WAAO,IAAP;AACD;;AAED,QAAMC,MAAM,GAAG,MAAM;AACnBR,IAAAA,YAAY,CAACG,WAAW,GAAG,CAAf,CAAZ;AACD,GAFD;;AAIA,QAAMM,UAAU,GAAG,MAAM;AACvBT,IAAAA,YAAY,CAACG,WAAW,GAAG,CAAf,CAAZ;AACD,GAFD;;AAIA,MAAIO,QAAQ,GAAGJ,eAAe,CAACA,eAAe,CAACC,MAAhB,GAAyB,CAA1B,CAA9B;AACA,sBACE;AACE,IAAA,SAAS,EAAEZ,UAAU,CAAC,sBAAD,EAAyB;AAAE,OAACU,SAAD,GAAaA;AAAf,KAAzB,CADvB;AAAA,4BAIE;AACE,MAAA,SAAS,EAAEV,UAAU,CAAC,iBAAD,EAAoB;AACvCgB,QAAAA,QAAQ,EAAER,WAAW,KAAK;AADa,OAApB,CADvB;AAIE,MAAA,OAAO,EAAEM,UAJX;AAAA,6BAME;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAJF,EAYGH,eAAe,CAACM,GAAhB,CAAqBC,UAAD,IAAgB;AACnC;AACA,UAAIA,UAAU,KAAKhB,IAAnB,EAAyB;AACvB,4BAAO;AAAI,UAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAJkC,CAMnC;;;AACA,0BACE;AACE,QAAA,SAAS,EAAEF,UAAU,CAAC,iBAAD,EAAoB;AACvCmB,UAAAA,QAAQ,EAAED,UAAU,KAAKV;AADc,SAApB,CADvB;AAIE,QAAA,OAAO,EAAE,MAAMH,YAAY,CAACa,UAAD,CAJ7B;AAAA,kBAMGA;AANH;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAjBA,CAZH,eA+BE;AACE,MAAA,SAAS,EAAElB,UAAU,CAAC,iBAAD,EAAoB;AACvCgB,QAAAA,QAAQ,EAAER,WAAW,KAAKO;AADa,OAApB,CADvB;AAIE,MAAA,OAAO,EAAEF,MAJX;AAAA,6BAME;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CAzED;;GAAMV,W;UAUoBF,a;;;KAVpBE,W;AA2EN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { usePagination, DOTS } from \"usePagination\";\r\n//import \"./pagination.scss\";\r\nconst Pagination1 = (props) => {\r\n  const {\r\n    onPageChange,\r\n    totalCount,\r\n    siblingCount = 1,\r\n    currentPage,\r\n    pageSize,\r\n    className,\r\n  } = props;\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    totalCount,\r\n    siblingCount,\r\n    pageSize,\r\n  });\r\n\r\n  // If there are less than 2 times in pagination range we shall not render the component\r\n  if (currentPage === 0 || paginationRange.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n  return (\r\n    <ul\r\n      className={classnames(\"pagination-container\", { [className]: className })}\r\n    >\r\n      {/* Left navigation arrow */}\r\n      <li\r\n        className={classnames(\"pagination-item\", {\r\n          disabled: currentPage === 1,\r\n        })}\r\n        onClick={onPrevious}\r\n      >\r\n        <div className=\"arrow left\" />\r\n      </li>\r\n      {paginationRange.map((pageNumber) => {\r\n        // If the pageItem is a DOT, render the DOTS unicode character\r\n        if (pageNumber === DOTS) {\r\n          return <li className=\"pagination-item dots\">&#8230;</li>;\r\n        }\r\n\r\n        // Render our Page Pills\r\n        return (\r\n          <li\r\n            className={classnames(\"pagination-item\", {\r\n              selected: pageNumber === currentPage,\r\n            })}\r\n            onClick={() => onPageChange(pageNumber)}\r\n          >\r\n            {pageNumber}\r\n          </li>\r\n        );\r\n      })}\r\n      {/*  Right Navigation arrow */}\r\n      <li\r\n        className={classnames(\"pagination-item\", {\r\n          disabled: currentPage === lastPage,\r\n        })}\r\n        onClick={onNext}\r\n      >\r\n        <div className=\"arrow right\" />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination1;\r\n"]},"metadata":{},"sourceType":"module"}